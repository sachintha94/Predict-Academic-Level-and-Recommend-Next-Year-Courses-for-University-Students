{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachintha\\\\Desktop\\\\testing03\\\\frontend\\\\src\\\\Components\\\\Inputs.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Inputs.css';\nimport Meter from './Meter'; // Import the Meter component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inputs() {\n  _s();\n  const [studentId, setStudentId] = useState('');\n  const [courseComp, setCourseComp] = useState('');\n  const [courseElec, setCourseElec] = useState('');\n  const [responseMessage, setResponseMessage] = useState('');\n  const [predictedLable, setPredictedLable] = useState(null); // State for predicted level\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const data = {\n      course_comp: courseComp,\n      course_elec: courseElec\n    };\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/Cal_credit', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        setPredictedLable(result.predicted_lable); // Set the predicted level\n        setResponseMessage(`Credits: ${result.credits}`);\n      } else {\n        setResponseMessage(`Error: ${result.error}`);\n        setPredictedLable(null); // Clear the predicted level on error\n      }\n    } catch (error) {\n      setResponseMessage(`An error occurred: ${error.message}`);\n      setPredictedLable(null); // Clear the predicted level on error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-html\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Details of Student\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"studentId\",\n              className: \"label\",\n              children: \"STUDENT ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"studentId\",\n              type: \"text\",\n              className: \"input\",\n              placeholder: \"Enter Student ID\",\n              value: studentId,\n              onChange: e => setStudentId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"courseComp\",\n              className: \"label\",\n              children: \"COMPULSORY SUBJECTS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"courseComp\",\n              type: \"text\",\n              className: \"input\",\n              placeholder: \"Enter Compulsory Subjects\",\n              value: courseComp,\n              onChange: e => setCourseComp(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"courseElec\",\n              className: \"label\",\n              children: \"ELECTIVE SUBJECTS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"courseElec\",\n              type: \"text\",\n              className: \"input\",\n              placeholder: \"Enter Elective Subjects\",\n              value: courseElec,\n              onChange: e => setCourseElec(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"group submit-button\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"button\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), responseMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"response-message\",\n        children: responseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }, this), predictedLable !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meter-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Predicted Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Meter, {\n          value: predictedLable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Inputs, \"O6dQXu3nKr6eB3167PE3DXE1ubg=\");\n_c = Inputs;\nvar _c;\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"names":["React","useState","Meter","jsxDEV","_jsxDEV","Inputs","_s","studentId","setStudentId","courseComp","setCourseComp","courseElec","setCourseElec","responseMessage","setResponseMessage","predictedLable","setPredictedLable","handleSubmit","event","preventDefault","data","course_comp","course_elec","response","fetch","method","headers","body","JSON","stringify","result","json","ok","predicted_lable","credits","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Sachintha/Desktop/testing03/frontend/src/Components/Inputs.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Inputs.css';\r\nimport Meter from './Meter'; // Import the Meter component\r\n\r\nexport default function Inputs() {\r\n  const [studentId, setStudentId] = useState('');\r\n  const [courseComp, setCourseComp] = useState('');\r\n  const [courseElec, setCourseElec] = useState('');\r\n  const [responseMessage, setResponseMessage] = useState('');\r\n  const [predictedLable, setPredictedLable] = useState(null); // State for predicted level\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const data = {\r\n      course_comp: courseComp,\r\n      course_elec: courseElec,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/api/Cal_credit', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        setPredictedLable(result.predicted_lable); // Set the predicted level\r\n        setResponseMessage(`Credits: ${result.credits}`);\r\n      } else {\r\n        setResponseMessage(`Error: ${result.error}`);\r\n        setPredictedLable(null); // Clear the predicted level on error\r\n      }\r\n    } catch (error) {\r\n      setResponseMessage(`An error occurred: ${error.message}`);\r\n      setPredictedLable(null); // Clear the predicted level on error\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrap\">\r\n      <div className=\"login-html\">\r\n        <h2 className=\"title\">Details of Student</h2>\r\n        <form className=\"login-form\" onSubmit={handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"group\">\r\n              <label htmlFor=\"studentId\" className=\"label\">\r\n                STUDENT ID\r\n              </label>\r\n              <input\r\n                id=\"studentId\"\r\n                type=\"text\"\r\n                className=\"input\"\r\n                placeholder=\"Enter Student ID\"\r\n                value={studentId}\r\n                onChange={(e) => setStudentId(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"group\">\r\n              <label htmlFor=\"courseComp\" className=\"label\">\r\n                COMPULSORY SUBJECTS\r\n              </label>\r\n              <input\r\n                id=\"courseComp\"\r\n                type=\"text\"\r\n                className=\"input\"\r\n                placeholder=\"Enter Compulsory Subjects\"\r\n                value={courseComp}\r\n                onChange={(e) => setCourseComp(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"group\">\r\n              <label htmlFor=\"courseElec\" className=\"label\">\r\n                ELECTIVE SUBJECTS\r\n              </label>\r\n              <input\r\n                id=\"courseElec\"\r\n                type=\"text\"\r\n                className=\"input\"\r\n                placeholder=\"Enter Elective Subjects\"\r\n                value={courseElec}\r\n                onChange={(e) => setCourseElec(e.target.value)}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"group submit-button\">\r\n            <input type=\"submit\" className=\"button\" value=\"Submit\" />\r\n          </div>\r\n        </form>\r\n        {responseMessage && <p className=\"response-message\">{responseMessage}</p>}\r\n        {predictedLable !== null && (\r\n          <div className=\"meter-container\">\r\n            <h3>Predicted Level:</h3>\r\n            <Meter value={predictedLable} /> {/* Pass the predicted level to Meter */}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}