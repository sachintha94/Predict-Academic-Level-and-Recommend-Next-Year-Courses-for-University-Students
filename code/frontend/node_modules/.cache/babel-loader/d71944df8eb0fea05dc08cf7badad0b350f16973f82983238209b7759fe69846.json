{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sachintha\\\\Desktop\\\\testing03\\\\frontend\\\\src\\\\Components\\\\Meter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Meter.css'; // Include your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Meter = () => {\n  _s();\n  const [value, setValue] = useState(6); // State to manage slider value\n\n  const handleInputChange = e => {\n    const newValue = e.target.value;\n    setValue(newValue); // Update the value state\n  };\n\n  // useEffect(() => {\n  //   setValue(predictedLevel); // Update slider when predictedLevel changes\n  // }, [predictedLevel]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"range\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"fileUpload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"fileElem\",\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"fileSelect\",\n        children: \"Upload File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Usage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: \"40\",\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"4.00 GB out of 10 GB (40%) (\", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          className: \"upgrade\",\n          children: \"Upgrade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Meter, \"vUfhCdQZAJCoIzgUc54ghn/9peA=\");\n_c = Meter;\nexport default Meter; // Export Meter as default\nvar _c;\n$RefreshReg$(_c, \"Meter\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Meter","_s","value","setValue","handleInputChange","e","newValue","target","className","children","type","multiple","fileName","_jsxFileName","lineNumber","columnNumber","max","href","_c","$RefreshReg$"],"sources":["C:/Users/Sachintha/Desktop/testing03/frontend/src/Components/Meter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Meter.css'; // Include your CSS file for styling\r\n\r\nconst Meter = () => {\r\n  const [value, setValue] = useState(6); // State to manage slider value\r\n\r\n  const handleInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setValue(newValue); // Update the value state\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setValue(predictedLevel); // Update slider when predictedLevel changes\r\n  // }, [predictedLevel]);\r\n\r\n  return (\r\n    <div className=\"range\">\r\n      <form className=\"fileUpload\">\r\n        <input type=\"file\" className=\"fileElem\" multiple />\r\n        <label className=\"fileSelect\">Upload File</label>\r\n        <h4>Usage</h4>\r\n        <progress value=\"40\" max=\"100\"></progress>\r\n        <p>\r\n          4.00 GB out of 10 GB (40%) (\r\n          <a href=\"#\" className=\"upgrade\">\r\n            Upgrade\r\n          </a>\r\n          )\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Meter; // Export Meter as default\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvC,MAAMO,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACL,KAAK;IAC/BC,QAAQ,CAACG,QAAQ,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACA;EACA;;EAEA,oBACEP,OAAA;IAAKS,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBV,OAAA;MAAMS,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC1BV,OAAA;QAAOW,IAAI,EAAC,MAAM;QAACF,SAAS,EAAC,UAAU;QAACG,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnDhB,OAAA;QAAOS,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAW;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjDhB,OAAA;QAAAU,QAAA,EAAI;MAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdhB,OAAA;QAAUG,KAAK,EAAC,IAAI;QAACc,GAAG,EAAC;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eAC1ChB,OAAA;QAAAU,QAAA,GAAG,8BAED,eAAAV,OAAA;UAAGkB,IAAI,EAAC,GAAG;UAACT,SAAS,EAAC,SAAS;UAAAC,QAAA,EAAC;QAEhC;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,KAEN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACd,EAAA,CA7BID,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AA+BX,eAAeA,KAAK,CAAC,CAAC;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}